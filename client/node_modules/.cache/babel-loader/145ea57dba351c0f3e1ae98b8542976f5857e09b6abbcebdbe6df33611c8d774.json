{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amat Hazbar\\\\Downloads\\\\Tasktracker-todoList-Enas\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//Import the componetents that i need to use it inside my app\nimport ListHeader from './components/ListHeader';\nimport ListItem from './components/ListItem';\nimport Auth from './components/Auth';\nimport { useEffect, useState } from 'react'; // Import React hooks for managing state and side effects\nimport { useCookies } from 'react-cookie'; // Import the useCookies hook to manage cookies for auth\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Initialize state for cookies (AuthToken and Email) and tasks\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  const authToken = cookies.AuthToken;\n  const userEmail = cookies.Email;\n  const [tasks, setTasks] = useState(null);\n\n  // Function to fetch data from the backend\n  const getData = async () => {\n    try {\n      // Make a GET request to fetch tasks from the server\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${userEmail}`);\n      const json = await response.json(); // Parse the response as JSON\n      setTasks(json); // Update the state with the tasks data\n    } catch (err) {\n      // Log any errors that occur during the fetch\n      console.error(err);\n    }\n  };\n\n  // useEffect hook to fetch data when the component is mounted\n  useEffect(() => {\n    // If the authToken exists, fetch data\n    if (authToken) {\n      getData();\n    }\n  }, []); // Empty dependency array means this effect runs only once after initial render\n\n  console.log(tasks); // Log the fetched tasks to the console for debugging\n\n  // Sort tasks by date in ascending order\n  const sortedTasks = tasks === null || tasks === void 0 ? void 0 : tasks.sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [!authToken && /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this), authToken && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n        listName: '\\u{1F4C8} TaskTracke',\n        getData: getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-email\",\n        children: [\"Welcome back \", userEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), \" \", sortedTasks === null || sortedTasks === void 0 ? void 0 : sortedTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        task: task,\n        getData: getData\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"copyright\",\n      children: \"\\xA9 TaskTracker B.V.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"CwIB3fgSkrXYEVZ8gCC7ZRXOGhI=\", false, function () {\n  return [useCookies];\n});\n_c = App;\nexport default App; // Export the App component to be used in other parts of the app\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ListHeader","ListItem","Auth","useEffect","useState","useCookies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cookies","setCookie","removeCookie","authToken","AuthToken","userEmail","Email","tasks","setTasks","getData","response","fetch","process","env","REACT_APP_SERVERURL","json","err","console","error","log","sortedTasks","sort","a","b","Date","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","listName","map","task","id","_c","$RefreshReg$"],"sources":["C:/Users/Amat Hazbar/Downloads/Tasktracker-todoList-Enas/client/src/App.js"],"sourcesContent":["//Import the componetents that i need to use it inside my app\nimport ListHeader from './components/ListHeader'\nimport ListItem from './components/ListItem' \nimport Auth from './components/Auth'\nimport { useEffect, useState } from 'react' // Import React hooks for managing state and side effects\nimport { useCookies } from 'react-cookie' // Import the useCookies hook to manage cookies for auth\n\nconst App = () => {\n  // Initialize state for cookies (AuthToken and Email) and tasks\n  const [cookies, setCookie, removeCookie] = useCookies(null)\n  const authToken = cookies.AuthToken \n  const userEmail = cookies.Email \n  const [tasks, setTasks] = useState(null) \n\n  // Function to fetch data from the backend\n  const getData = async () => {\n    try {\n      // Make a GET request to fetch tasks from the server\n      const response = await fetch(`${process.env.REACT_APP_SERVERURL}/todos/${userEmail}`)\n      const json = await response.json() // Parse the response as JSON\n      setTasks(json) // Update the state with the tasks data\n    } catch (err) {\n      // Log any errors that occur during the fetch\n      console.error(err)\n    }\n  }\n\n  // useEffect hook to fetch data when the component is mounted\n  useEffect(() => {\n    // If the authToken exists, fetch data\n    if (authToken) {\n      getData()\n    }\n  }, []) // Empty dependency array means this effect runs only once after initial render\n\n  console.log(tasks) // Log the fetched tasks to the console for debugging\n\n  // Sort tasks by date in ascending order\n  const sortedTasks = tasks?.sort((a, b) => new Date(a.date) - new Date(b.date))\n\n  return (\n    <div className=\"app\">\n      {/* If no authToken exists, show the Auth component */}\n      {!authToken && <Auth />}\n      \n      {/* If authToken exists, display the Task Tracker and list of tasks */}\n      {authToken &&\n        <>\n          <ListHeader listName={'\\u{1F4C8} TaskTracke'} getData={getData} /> {/* Display the header with the title */}\n          <p className=\"user-email\">Welcome back {userEmail}</p> {/* Show the user's email */}\n          \n          {/* Map over the sorted tasks and render each task as a ListItem */}\n          {sortedTasks?.map((task) => <ListItem key={task.id} task={task} getData={getData} />)}\n        </>\n      }\n\n      {/* Copyright footer */}\n      <p className=\"copyright\">Â© TaskTracker B.V.</p>\n    </div>\n  )\n}\n\nexport default App // Export the App component to be used in other parts of the app\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}