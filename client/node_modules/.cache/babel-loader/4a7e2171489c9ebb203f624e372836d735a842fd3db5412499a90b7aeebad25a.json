{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amat Hazbar\\\\Downloads\\\\Tasktracker-todoList-Enas\\\\client\\\\src\\\\components\\\\TickIcon.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickIcon = ({\n  taskId,\n  progress\n}) => {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Automatically set completion status based on progress\n  useEffect(() => {\n    if (progress === 100) {\n      setIsCompleted(true);\n      localStorage.setItem(`taskStatus_${taskId}`, JSON.stringify(true));\n    } else {\n      setIsCompleted(false);\n      localStorage.setItem(`taskStatus_${taskId}`, JSON.stringify(false));\n    }\n  }, [progress, taskId]);\n\n  // Set the color based on completion status (green if completed, red if not)\n  const iconColor = isCompleted ? 'rgb(141, 181, 145)' : 'rgb(255, 99, 71)';\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"tick\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"25\",\n    height: \"25\",\n    viewBox: \"0 0 512 512\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"ionicons-v5-e\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M448,256c0-106-86-192-192-192S64,150,64,256s86,192,192,192S448,362,448,256Z\",\n      fill: iconColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n      points: \"352 176 217.6 336 160 272\",\n      fill: \"none\",\n      stroke: iconColor,\n      strokeWidth: \"30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TickIcon, \"SaNq15iri2kwmUpIV/5IZzxmPSw=\");\n_c = TickIcon;\nexport default TickIcon;\nvar _c;\n$RefreshReg$(_c, \"TickIcon\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TickIcon","taskId","progress","_s","isCompleted","setIsCompleted","localStorage","setItem","JSON","stringify","iconColor","className","xmlns","width","height","viewBox","children","fileName","_jsxFileName","lineNumber","columnNumber","d","fill","points","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Amat Hazbar/Downloads/Tasktracker-todoList-Enas/client/src/components/TickIcon.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst TickIcon = ({ taskId, progress }) => {\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Automatically set completion status based on progress\n  useEffect(() => {\n    if (progress === 100) {\n      setIsCompleted(true);\n      localStorage.setItem(`taskStatus_${taskId}`, JSON.stringify(true));\n    } else {\n      setIsCompleted(false);\n      localStorage.setItem(`taskStatus_${taskId}`, JSON.stringify(false));\n    }\n  }, [progress, taskId]);\n\n  // Set the color based on completion status (green if completed, red if not)\n  const iconColor = isCompleted ? 'rgb(141, 181, 145)' : 'rgb(255, 99, 71)';\n\n  return (\n    <svg\n      className=\"tick\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 512 512\"\n    >\n      <title>ionicons-v5-e</title>\n      <path\n        d=\"M448,256c0-106-86-192-192-192S64,150,64,256s86,192,192,192S448,362,448,256Z\"\n        fill={iconColor}\n      />\n      <polyline\n        points=\"352 176 217.6 336 160 272\"\n        fill=\"none\"\n        stroke={iconColor}\n        strokeWidth=\"30\"\n      />\n    </svg>\n  );\n};\n\nexport default TickIcon;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIM,QAAQ,KAAK,GAAG,EAAE;MACpBG,cAAc,CAAC,IAAI,CAAC;MACpBC,YAAY,CAACC,OAAO,CAAC,cAAcN,MAAM,EAAE,EAAEO,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC,MAAM;MACLJ,cAAc,CAAC,KAAK,CAAC;MACrBC,YAAY,CAACC,OAAO,CAAC,cAAcN,MAAM,EAAE,EAAEO,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrE;EACF,CAAC,EAAE,CAACP,QAAQ,EAAED,MAAM,CAAC,CAAC;;EAEtB;EACA,MAAMS,SAAS,GAAGN,WAAW,GAAG,oBAAoB,GAAG,kBAAkB;EAEzE,oBACEL,OAAA;IACEY,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAC,4BAA4B;IAClCC,KAAK,EAAC,IAAI;IACVC,MAAM,EAAC,IAAI;IACXC,OAAO,EAAC,aAAa;IAAAC,QAAA,gBAErBjB,OAAA;MAAAiB,QAAA,EAAO;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5BrB,OAAA;MACEsB,CAAC,EAAC,6EAA6E;MAC/EC,IAAI,EAAEZ;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACFrB,OAAA;MACEwB,MAAM,EAAC,2BAA2B;MAClCD,IAAI,EAAC,MAAM;MACXE,MAAM,EAAEd,SAAU;MAClBe,WAAW,EAAC;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtCIH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}