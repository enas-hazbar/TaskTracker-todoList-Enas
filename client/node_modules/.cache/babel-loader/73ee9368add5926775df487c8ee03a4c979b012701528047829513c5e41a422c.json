{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amat Hazbar\\\\Downloads\\\\Tasktracker-todoList-Enas\\\\client\\\\src\\\\components\\\\TickIcon.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickIcon = ({\n  progress\n}) => {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Update the completion status based on progress\n  useEffect(() => {\n    if (progress === 100) {\n      setIsCompleted(true); // Task is complete when progress is 100%\n    } else {\n      setIsCompleted(false); // Task is not complete otherwise\n    }\n  }, [progress]); // Re-run when progress changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '25px',\n      height: '25px',\n      borderRadius: '50%',\n      // Circular shape\n      border: `1px solid ${isCompleted ? 'green' : 'red'}`,\n      // Green border when completed, red when not\n      backgroundColor: isCompleted ? 'green' : 'transparent',\n      // Fill green if completed\n      cursor: 'pointer' // Optional: to show it's clickable (though not necessary in this case)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TickIcon, \"SaNq15iri2kwmUpIV/5IZzxmPSw=\");\n_c = TickIcon;\nexport default TickIcon;\nvar _c;\n$RefreshReg$(_c, \"TickIcon\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","TickIcon","progress","_s","isCompleted","setIsCompleted","style","width","height","borderRadius","border","backgroundColor","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Amat Hazbar/Downloads/Tasktracker-todoList-Enas/client/src/components/TickIcon.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst TickIcon = ({ progress }) => {\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Update the completion status based on progress\n  useEffect(() => {\n    if (progress === 100) {\n      setIsCompleted(true); // Task is complete when progress is 100%\n    } else {\n      setIsCompleted(false); // Task is not complete otherwise\n    }\n  }, [progress]); // Re-run when progress changes\n\n  return (\n    <div\n      style={{\n        width: '25px',\n        height: '25px',\n        borderRadius: '50%', // Circular shape\n        border: `1px solid ${isCompleted ? 'green' : 'red'}`, // Green border when completed, red when not\n        backgroundColor: isCompleted ? 'green' : 'transparent', // Fill green if completed\n        cursor: 'pointer', // Optional: to show it's clickable (though not necessary in this case)\n      }}\n    ></div>\n  );\n};\n\nexport default TickIcon;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,KAAK,GAAG,EAAE;MACpBG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEF,OAAA;IACEM,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MAAE;MACrBC,MAAM,EAAE,aAAaN,WAAW,GAAG,OAAO,GAAG,KAAK,EAAE;MAAE;MACtDO,eAAe,EAAEP,WAAW,GAAG,OAAO,GAAG,aAAa;MAAE;MACxDQ,MAAM,EAAE,SAAS,CAAE;IACrB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACb,EAAA,CAxBIF,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}