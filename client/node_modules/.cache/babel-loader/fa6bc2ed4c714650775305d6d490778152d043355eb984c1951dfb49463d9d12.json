{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amat Hazbar\\\\Downloads\\\\Tasktracker-todoList-Enas\\\\client\\\\src\\\\components\\\\TickIcon.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TickIcon = ({\n  taskId\n}) => {\n  _s();\n  // Retrieve the saved state from localStorage, default to 'false' (not completed)\n  const [isCompleted, setIsCompleted] = useState(false);\n  useEffect(() => {\n    // When the component mounts, check if there's a saved state for this task\n    const savedState = localStorage.getItem(`task_${taskId}_completed`);\n    if (savedState === 'true') {\n      setIsCompleted(true);\n    }\n  }, [taskId]);\n  const handleClick = () => {\n    const newState = !isCompleted;\n    setIsCompleted(newState);\n\n    // Save the state to localStorage\n    localStorage.setItem(`task_${taskId}_completed`, newState.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    onClick: handleClick,\n    className: `tick ${isCompleted ? 'completed' : ''}`,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"25\",\n    height: \"25\",\n    viewBox: \"0 0 512 512\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Tick Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M448,256c0-106-86-192-192-192S64,150,64,256s86,192,192,192S448,362,448,256Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n      points: \"352 176 217.6 336 160 272\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TickIcon, \"SaNq15iri2kwmUpIV/5IZzxmPSw=\");\n_c = TickIcon;\nexport default TickIcon;\nvar _c;\n$RefreshReg$(_c, \"TickIcon\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","TickIcon","taskId","_s","isCompleted","setIsCompleted","savedState","localStorage","getItem","handleClick","newState","setItem","toString","onClick","className","xmlns","width","height","viewBox","children","fileName","_jsxFileName","lineNumber","columnNumber","d","points","_c","$RefreshReg$"],"sources":["C:/Users/Amat Hazbar/Downloads/Tasktracker-todoList-Enas/client/src/components/TickIcon.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nconst TickIcon = ({ taskId }) => {\n  // Retrieve the saved state from localStorage, default to 'false' (not completed)\n  const [isCompleted, setIsCompleted] = useState(false)\n\n  useEffect(() => {\n    // When the component mounts, check if there's a saved state for this task\n    const savedState = localStorage.getItem(`task_${taskId}_completed`)\n    if (savedState === 'true') {\n      setIsCompleted(true)\n    }\n  }, [taskId])\n\n  const handleClick = () => {\n    const newState = !isCompleted\n    setIsCompleted(newState)\n    \n    // Save the state to localStorage\n    localStorage.setItem(`task_${taskId}_completed`, newState.toString())\n  }\n\n  return (\n    <svg\n      onClick={handleClick}\n      className={`tick ${isCompleted ? 'completed' : ''}`}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 512 512\"\n    >\n      <title>Tick Icon</title>\n      <path d=\"M448,256c0-106-86-192-192-192S64,150,64,256s86,192,192,192S448,362,448,256Z\" />\n      <polyline points=\"352 176 217.6 336 160 272\" />\n    </svg>\n  )\n}\n\nexport default TickIcon\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQN,MAAM,YAAY,CAAC;IACnE,IAAII,UAAU,KAAK,MAAM,EAAE;MACzBD,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,CAACN,WAAW;IAC7BC,cAAc,CAACK,QAAQ,CAAC;;IAExB;IACAH,YAAY,CAACI,OAAO,CAAC,QAAQT,MAAM,YAAY,EAAEQ,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,oBACEZ,OAAA;IACEa,OAAO,EAAEJ,WAAY;IACrBK,SAAS,EAAE,QAAQV,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;IACpDW,KAAK,EAAC,4BAA4B;IAClCC,KAAK,EAAC,IAAI;IACVC,MAAM,EAAC,IAAI;IACXC,OAAO,EAAC,aAAa;IAAAC,QAAA,gBAErBnB,OAAA;MAAAmB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBvB,OAAA;MAAMwB,CAAC,EAAC;IAA6E;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFvB,OAAA;MAAUyB,MAAM,EAAC;IAA2B;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAApB,EAAA,CAlCKF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAoCd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}